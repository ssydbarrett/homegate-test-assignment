//
//  HomeDetailsRouter.swift
//  HomegateTestAssignmentUIKit
//
//  Created by Vladimir Lukic on 23.10.21..
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SafariServices

@objc protocol HomeDetailsRoutingLogic
{
  //func routeToSomewhere(segue: UIStoryboardSegue?)
    
    // Open safari view controller with provided link
    func routeToExternalLink(params: Dictionary<String, Any>)
}

protocol HomeDetailsDataPassing
{
  var dataStore: HomeDetailsDataStore? { get }
}

class HomeDetailsRouter: NSObject, HomeDetailsRoutingLogic, HomeDetailsDataPassing
{
  weak var viewController: HomeDetailsViewController?
  var dataStore: HomeDetailsDataStore?
  
  // MARK: Routing
  
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation
    
    // Open safari view controller with provided link
    func routeToExternalLink(params: Dictionary<String, Any>) {
        
        // Get url from params
        let url: String = params["url"] as? String ?? ""
        let urlCleared = url.replacingOccurrences(of: "//uat.", with: "//")
        guard let url = URL(string: urlCleared) else {
            
            // Handle bad url
            Utils.showModalMessage(title: "Error", message: "Bad URL", context: viewController ?? UIApplication.topViewController(), handler: nil)
            return
        }
        
        // Present safari controller
        let safariController = SFSafariViewController(url: url)
        viewController?.present(safariController, animated: true, completion: nil)
    }
  
  //func navigateToSomewhere(source: HomeDetailsViewController, destination: SomewhereViewController)
  //{
  //  source.show(destination, sender: nil)
  //}
  
  // MARK: Passing data
  
  //func passDataToSomewhere(source: HomeDetailsDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
